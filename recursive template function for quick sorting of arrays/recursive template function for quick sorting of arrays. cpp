#include <iostream>
#include <vector>

// Функция для обмена элементов массива
template <typename T>
void swap(T& a, T& b) {
    T temp = a;
    a = b;
    b = temp;
}

// Рекурсивная функция быстрой сортировки
template <typename T>
void quickSort(std::vector<T>& arr, int low, int high) {
    if (low < high) {
        // Выбираем произвольный элемент в качестве опорного
        T pivot = arr[high];

        // Индекс элемента, меньшего опорного
        int i = low - 1;

        // Перебираем элементы от low до high-1
        for (int j = low; j < high; j++) {
            // Если текущий элемент меньше или равен опорному, меняем их местами
            if (arr[j] <= pivot) {
                i++;
                swap(arr[i], arr[j]);
            }
        }

        // Помещаем опорный элемент на правильную позицию
        swap(arr[i + 1], arr[high]);

        // Рекурсивно сортируем левую и правую части массива
        quickSort(arr, low, i);
        quickSort(arr, i + 2, high);
    }
}

// Функция для вызова быстрой сортировки
template <typename T>
void quickSort(std::vector<T>& arr) {
    int size = arr.size();
    quickSort(arr, 0, size - 1);
}

int main() {
    std::vector<int> arr = {5, 2, 9, 1, 7, 6};

    std::cout << "Исходный массив: ";
    for (int num : arr) {
        std::cout << num << " ";
    }
    std::cout << std::endl;

    // Вызываем быструю сортировку
    quickSort(arr);

    std::cout << "Отсортированный массив: ";
    for (int num : arr) {
        std::cout << num << " ";
    }
    std::cout << std::endl;

    return 0;
}